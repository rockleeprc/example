<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="exam.aop"></context:component-scan>

	<bean id="businessImpl" class="exam.aop.interfaces.impl.BusinessImpl"></bean>

	<!-- IntroductionInterceptor 引介通知 -->
	<bean id="businessIntroductionAdvice" class="exam.aop.advice.introduction.BusinessIntroductionAdvice"></bean>
	<bean id="businessThrowsAdviceProxy" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:proxyInterfaces="exam.aop.interfaces.IBusiness" p:interceptorNames="businessIntroductionAdvice"
		p:target-ref="businessImpl" p:proxyTargetClass="true"></bean
	
	<!-- 
		MethodInterceptor 异常通知 -->
	<bean id="businessThrowsAdvice" class="exam.aop.advice.thr0ws.BusinessThrowsAdvice"></bean>
	<bean id="businessThrowsAdviceProxy" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:proxyInterfaces="exam.aop.interfaces.IBusiness" p:interceptorNames="businessThrowsAdvice"
		p:target-ref="businessImpl"></bean>

	<!-- MethodInterceptor 环绕通知 -->
	<bean id="businessAroundAdvice" class="exam.aop.advice.around.BusinessAroundAdvice"></bean>
	<bean id="businessAroundAdviceProxy" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:proxyInterfaces="exam.aop.interfaces.IBusiness" p:interceptorNames="businessAroundAdvice"
		p:target-ref="businessImpl" p:proxyTargetClass="true"></bean>

	<!-- AfterReturningAdvice 后置通知 -->
	<bean id="buinessAfterReturningAdvice" class="exam.aop.advice.after.BusinessAfterAdvice"></bean>
	<bean id="afterReturningAdviceProxy" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:proxyInterfaces="exam.aop.interfaces.IBusiness" p:interceptorNames="buinessAfterReturningAdvice"
		p:target-ref="businessImpl"></bean>

	<!-- BeforeAdvice 前置通知 -->
	<bean id="buinessBeforeAdvice" class="exam.aop.advice.before.BusinessBeforeAdvice"></bean>
	<bean id="beforeAdviceProxy" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:proxyInterfaces="exam.aop.interfaces.IBusiness" p:interceptorNames="buinessBeforeAdvice"
		p:target-ref="businessImpl"></bean>

</beans>