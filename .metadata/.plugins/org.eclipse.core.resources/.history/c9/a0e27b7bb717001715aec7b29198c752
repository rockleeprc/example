package exam.aop.advice;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.aop.BeforeAdvice;
import org.springframework.aop.framework.ProxyFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import exam.aop.advice.before.BusindessBeforeAdvice;
import exam.aop.interfaces.IBusiness;
import exam.aop.interfaces.impl.BusinessImpl;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = "classpath:aop/applicationContext-advice.xml")
public class AdviceAOP {

	@Autowired
	@Qualifier("busProxy")
	IBusiness beforeAdvice;

	@Test
	public void beforeAdvice4Conf() {

	}

	@Test
	public void beforeAdvice4Jdk() {
		IBusiness bus = new BusinessImpl();
		BeforeAdvice advice = new BusindessBeforeAdvice();
		ProxyFactory pf = new ProxyFactory();
		pf.setTarget(bus);
		pf.addAdvice(advice);
		// 使用jdk代理
		pf.setInterfaces(bus.getClass().getInterfaces());
		IBusiness proxy = (IBusiness) pf.getProxy();
		proxy.doSomething();
		System.out.println(proxy.getClass().getName());
	}

	@Test
	public void beforeAdvice4Cglib() {
		IBusiness bus = new BusinessImpl();
		BeforeAdvice advice = new BusindessBeforeAdvice();
		ProxyFactory pf = new ProxyFactory();
		pf.setTarget(bus);
		pf.addAdvice(advice);
		// 针对代理进行优化，接口也会使用cglib
		pf.setOptimize(true);
		IBusiness proxy = (IBusiness) pf.getProxy();
		proxy.doSomething();
		System.out.println(proxy.getClass().getName());
	}
}
