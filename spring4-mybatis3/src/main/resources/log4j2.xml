<?xml version="1.0" encoding="UTF-8"?>
<!-- OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL -->
<Configuration status="WARN">
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="DEBUG" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!--这个都知道是输出日志的格式 -->
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
		</Console>
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 <File name="log" 
			fileName="log/test.log" append="true"> <PatternLayout pattern="%d{HH:mm:ss.SSS} 
			%-5level %class{36} %L %M - %msg%xEx%n" /> </File> -->
		<!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
<!-- 		<RollingFile name="RollingFile" fileName="${sys:catalina.base}/logs/app.log" -->
<!-- 			filePattern="${sys:catalina.base}/logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz" -->
<!-- 			immediateFlush="true"> -->
<!-- 			<ThresholdFilter level="DEBUG" onMatch="ACCEPT" -->
<!-- 				onMismatch="DENY" /> -->
<!-- 			<PatternLayout -->
<!-- 				pattern="%d{yyyy-MM-dd 'at' HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n" /> -->
<!-- 			<Policies> -->
<!-- 				当JVM启动时 -->
<!-- 				<OnStartupTriggeringPolicy /> -->
<!-- 				当前日期与日志的开始日期不匹配时 -->
<!-- 				<TimeBasedTriggeringPolicy /> -->
<!-- 				<SizeBasedTriggeringPolicy size="50MB" /> -->
<!-- 			</Policies> -->
<!-- 		</RollingFile> -->
	</appenders>
	<Loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<logger name="org.springframework" level="INFO"></logger>
		<logger name="org.mybatis" level="INFO"></logger>

		<!--建立一个默认的root的logger -->
		<root level="ALL">
			<appender-ref ref="RollingFile" />
			<appender-ref ref="Console" />
		</root>
	</Loggers>
</Configuration>